*, *::before, *::after {
  box-sizing: border-box;
}

html, body {
  min-height: 100%;
}

.game {
  display: flex;
  flex-direction: column;
  width: max-content;
  max-width: 100vw;
  height: 100%;
  margin: 0 auto;
  padding: 1em;
  color: white;
  background-color: hsl(240, 3%, 7%);
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  font-size: clamp(0.8rem, 2.5vmin, 1.5rem);
  overflow: hidden;
}

/**
 * Header
 */
.game-header {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  align-items: center;
  justify-content: center;
  width: 100%;
  position: relative;
  margin-top: -1em;
  height: 3em;
}

.game-header .menu:first-child {
  justify-self: start;
}

.game-header .menu:last-child {
  justify-self: end;
}

.game-header .title {
  margin: 0;
  font-weight: 900;
  letter-spacing: .2em;
  text-align: center;
  text-transform: uppercase;
}

.icon {
  border: none;
  background: none;
  cursor: pointer;
  color: hsl(200, 1%, 35%);
  fill: currentColor;
  margin: 0;
  padding: 0;
}

.icon > svg {
  user-select: none;
  pointer-events: none;
}

/**
 * Keyboard
 */
.keyboard {
  display: grid;
  grid-template-columns: repeat(20, minmax(auto, 1.25em));
  grid-auto-rows: 3em;
  gap: 0.25em;
  justify-content: center;
}

.keyboard button {
  font-size: inherit;
  grid-column: span 2;
  border: none;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: hsl(
    var(--hue, 200),
    var(--saturation, 1%),
    calc(var(--lightness-offset, 0%) + var(--lightness, 51%))
  );
  color: white;
  fill: currentColor;
  text-transform: uppercase;
  border-radius: 0.25em;
  cursor: pointer;
  user-select: none;
}

.keyboard button:not(:hover,:focus) {
  transition: background-color 500ms ease-in-out;
}

.keyboard button[data-key="↵"],
.keyboard button[data-key="←"] {
  grid-column: span 3;
}

.keyboard button > svg {
  width: 1.75em;
  height: 1.75em;
  pointer-events: none;
}

.keyboard button:disabled {
  cursor: not-allowed;
}

.keyboard button:not(:disabled):is(:hover, :focus) {
  --lightness-offset: 10%;
}

.keyboard button[data-state="absent"] {
  --lightness: 23%;
}

.keyboard button[data-state="present"] {
  --hue: 49;
  --saturation: 51%;
  --lightness: 47%;
}

.keyboard button[data-state="correct"] {
  --hue: 115;
  --saturation: 29%;
  --lightness: 43%;
}



/**
 * Grid
 */
.grid {
  display: grid;
  justify-content: center;
  align-content: center;
  flex-grow: 1;
  grid-template-columns: repeat(5, 4em);
  grid-auto-rows: 4em;
  gap: .25em;
  margin-bottom: 1em;
}

.tile {
  font-size: 2em;
  color: white;
  border: 1px solid hsl(240, 2%, 23%);
  text-transform: uppercase;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  user-select: none;
  transition: transform 250ms linear;
}

.tile[data-state="active"] {
  border-color: hsl(200, 1%, 35%);
}

.tile[data-state="absent"] {
  border: none;
  background-color: hsl(240, 2%, 23%);
}

.tile[data-state="present"] {
  border: none;
  background-color: hsl(49, 51%, 47%);
}

.tile[data-state="correct"] {
  border: none;
  background-color: hsl(115, 29%, 43%);
}

.tile.flip {
  transform: rotateX(90deg);
}

.tile.shake {
  animation: shake 250ms ease-in-out;
}

@keyframes shake {
  10% {
    transform: translateX(-5%);
  }

  30% {
    transform: translateX(5%);
  }

  50% {
    transform: translateX(-7.5%);
  }

  70% {
    transform: translateX(7.5%);
  }

  90% {
    transform: translateX(-5%);
  }

  100% {
    transform: translateX(0);
  }
}

.tile.dance {
  animation: dance 500ms ease-in-out;
}

@keyframes dance {
  20% {
    transform: translateY(-50%);
  }

  40% {
    transform: translateY(5%);
  }

  60% {
    transform: translateY(25%);
  }

  80% {
    transform: translateY(2.5%);
  }

  90% {
    transform: translateY(-5%);
  }

  100% {
    transform: translateY(0);
  }
}



/**
 * Alerts
 */
.alert-container {
  position: fixed;
  top: 10vh;
  left: 50vw;
  transform: translateX(-50%);
  z-index: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: .5em;
}

.alert {
  color: black;
  background-color: hsl(204, 7%, 85%);
  padding: .75em;
  border-radius: .25em;
  pointer-events: none;
  opacity: 1;
  transition: opacity 500ms ease-in-out;
}

.alert.hide {
  opacity: 0;
}



/**
 * Modals
 */
.modal {
  position: fixed;
  inset: 0;
  opacity: 0;
  transition: visibility 0s, opacity 250ms ease-in-out;
  background-color: inherit;
  visibility: hidden;
}

.modal.open {
  opacity: 1;
  visibility: visible;
}

.modal.close {
  opacity: 0;
  visibility: visible;
}

.model-content {
  display: flex;
  flex-direction: column;
  max-width: max-content;
  padding: 1em;
  margin: 0 auto;
  transform: translateY(5vh);
  transition: transform 250ms ease-in-out;
}

.modal.open .model-content {
  transform: translateY(0);
}



/**
 * Instructions
 */
.instructions {
  font-size: .875em;
}

.instructions header {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  align-items: center;
  justify-content: center;
}

.instructions .title {
  text-align: center;
  text-transform: uppercase;
  grid-column: 2;
}

.instructions .close {
  justify-self: end;
}

.instructions .examples {
  border-top: 1px solid hsl(240, 2%, 23%);
  border-bottom: 1px solid hsl(240, 2%, 23%);
}

.instructions figure {
  margin: 0 0 2em;
}

.instructions blockquote {
  display: grid;
  grid-template-columns: repeat(5, 2em);
  grid-auto-rows: 2em;
  gap: .25em;
  margin: 0 0 1em;
}

.instructions .tile {
  font-size: 1.25em;
}
